group = "org.example"
version = "1.0"
description = "A sample Spring Boot application"

buildscript {
    ext {
        springBootVersion = "1.2.5.RELEASE"
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.2.8"

        classpath("io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE")

        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0"

        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework:springloaded:1.2.3.RELEASE")
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

apply plugin: "cobertura"
apply plugin: "com.github.kt3k.coveralls"
apply plugin: "idea"
apply plugin: "io.spring.dependency-management"
apply plugin: "java"
apply plugin: "spring-boot"
apply plugin: "war"

cobertura {
    coverageFormats = ["html", "xml"]
    coverageIgnoreTrivial = true
}

configurations {
    providedRuntime
}

dependencies {
    compile "com.domingosuarez.boot:spring-boot-starter-jade4j:0.3.0"

    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-mobile")
    compile("org.springframework.boot:spring-boot-starter-remote-shell")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

task wrapper(type: Wrapper) {
    gradleVersion = "2.3"
}

test.finalizedBy(project.tasks.cobertura)

war {
    baseName = "spring-boot-sample"
    version = "1.0"
}
